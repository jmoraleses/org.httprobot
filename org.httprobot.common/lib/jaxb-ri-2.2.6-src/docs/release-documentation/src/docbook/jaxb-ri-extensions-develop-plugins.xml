<?xml version="1.0" encoding="UTF-8"?>
<!--

DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

Copyright (c) 2012 Oracle and/or its affiliates. All rights reserved.

The contents of this file are subject to the terms of either the GNU
General Public License Version 2 only ("GPL") or the Common Development
and Distribution License("CDDL") (collectively, the "License").  You
may not use this file except in compliance with the License.  You can
obtain a copy of the License at
http://glassfish.java.net/public/CDDL+GPL_1_1.html
or packager/legal/LICENSE.txt.  See the License for the specific
language governing permissions and limitations under the License.

When distributing the software, include this License Header Notice in each
file and include the License file at packager/legal/LICENSE.txt.

GPL Classpath Exception:
Oracle designates this particular file as subject to the "Classpath"
exception as provided by Oracle in the GPL Version 2 section of the License
file that accompanied this code.

Modifications:
If applicable, add the following below the License Header, with the fields
enclosed by brackets [] replaced by your own identifying information:
"Portions Copyright [year] [name of copyright owner]"

Contributor(s):
If you wish your version of this file to be governed by only the CDDL or
only the GPL Version 2, indicate your decision by adding "[Contributor]
elects to include this software in this distribution under the [CDDL or GPL
Version 2] license."  If you don't indicate a single choice of license, a
recipient has the option to distribute your version of this file under
either the CDDL, the GPL Version 2 or to extend the choice of license to
its licensees as provided above.  However, if you add GPL Version 2 code
and therefore, elected the GPL Version 2 license, then the option applies
only if the new code is made subject to such option by the copyright
holder.

        -->
<!DOCTYPE book [
<!ENTITY % ents SYSTEM "docbook.ent">
%ents;
]>
<section version="5.0" xml:id="jaxb-ri-extensions-develop-plugins"
         xml:lang="en" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1999/xhtml"
         xmlns:ns3="http://www.w3.org/2000/svg"
         xmlns:ns="http://docbook.org/ns/docbook"
         xmlns:m="http://www.w3.org/1998/Math/MathML">
    <title>Develop Plugins</title>

    <para>This document describes how to write an XJC plugin to extend the
    code generation of XJC.</para>

    <section xml:id="section-5151430285858327">
        <title>What Can A Plugin Do?</title>

        <para>An XJC plugin participates in the code generation from a schema.
        It can define its own customizations that users can use to control it,
        it can access the code that the JAXB RI generates, it can generate
        additional classes/methods/fields/annotations/comments, and it can
        also replace some of the pluggability points in the compilation
        process, such as XML name -&gt; Java name conversion.</para>

        <para>As a show case of what a plugin can do, take a look at <link
        xlink:href="http://jaxb2-commons.java.net/">plugins hosted at
        JAXB2-commons</link>.</para>

        <section xml:id="section-909129508009087">
            <title>Quick Start</title>

            <para>To write a plugin, do the following simple steps.</para>

            <orderedlist>
                <listitem>
                    <para>Write a class, say, <literal>org.acme.MyPlugin</literal>
                    by extending <literal>com.sun.tools.xjc.Plugin</literal>. See
                    javadoc for how to implement methods.</para>
                </listitem>

                <listitem>
                    <para>Write the name of your plugin class in a text file
                    and put it as
                    <filename>/META-INF/services/com.sun.tools.xjc.Plugin</filename>
                    in your jar file.</para>
                </listitem>
            </orderedlist>

            <para>Users can then use your plugins by declaring an XJC ant task
            with your jar files.</para>

            <informalexample>
                <programlisting language="xml"><![CDATA[<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
    <classpath>
        <fileset dir="jaxb-ri/lib" includes="*.jar"/>
        <fileset dir="your-plugin" includes="*.jar"/>
    </classpath>
</taskdef>]]></programlisting>
            </informalexample>
        </section>

        <section xml:id="section-5979897283139746">
            <title>Resources</title>

            <para>See <link xlink:href="http://jaxb.java.net/plugin.html">this
            page</link> for more detailed, up-to-date information.</para>

            <para>Although we will do our best to maintain the compatibility
            of the interfaces, it is still subject to change at this
            point.</para>
        </section>
    </section>
</section>
